spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/postgres?currentSchema=cutthespend-dev}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:myusername}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:mypassword}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:false}
spring.jpa.database-platform=${SPRING_JPA_DATABASE_PLATFORM:org.hibernate.dialect.PostgreSQLDialect}
spring.datasource.driver-class-name=${SPRING_DATASOURCE_DRIVER_CLASS_NAME:org.postgresql.Driver}
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
spring.jpa.properties.hibernate.format_sql=false
spring.profiles.active=${SPRING_PROFILES_ACTIVE:}
server.port=${PORT:8080}
spring.flyway.baseline-on-migrate=true

# --- Payments (Razorpay) ---
payment.razorpay.key=${RAZORPAY_KEY:rzp_test_wQbGBqfYJDdZZZ}
payment.razorpay.secret=${RAZORPAY_SECRET:9yXz8n7l96ILXc5cMDgguv6A}

# --- Observability & Logging ---
app.http.logging.enabled=true
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.probes.enabled=true
management.metrics.tags.application=cutthespend-backend
logging.level.root=${LOGGING_LEVEL_ROOT:INFO}

# --- Security / JWT (inject via env in production) ---
security.jwt.secret=${JWT_SECRET:MySuperSecureJWTKey@1234567890ABCDEF}

# --- Database Migration (Liquibase) ---
spring.flyway.enabled=true

# --- Feature Flags ---
app.statements.async.enabled=true

# --- HikariCP tuning (prevent pool exhaustion during async processing) ---
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=60000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000

app.security.cors.allowed-origins=${APP_SECURITY_CORS_ALLOWED_ORIGINS:https://cutthespend.netlify.app/,http://localhost:3000,https://cutthespend.com}
# --- AI / Extraction ---
# Exposed for the statement extraction Python script. Prefer setting the env var OPENAI_API_KEY in prod.
openai.api.key=${OPENAI_API_KEY:}

# --- Statement Extraction Script ---
# Path to the Python extraction script. Override via env EXTRACTION_SCRIPT_PATH in different environments.
extraction.script.path=${EXTRACTION_SCRIPT_PATH:d:/product/expense-monitor/extraction_lambda/extraction_lambda.py}
python.cmd=${PYTHON_CMD:python}

# --- Extraction Engine Mode ---
# Options: local_python (current ProcessBuilder) | aws_pipeline (S3 + StepFunctions + SQS) | java_inline (future Java impl)
extraction.mode=${EXTRACTION_MODE:local_python}

# --- AWS Extraction Pipeline (only used when extraction.mode=aws_pipeline) ---
aws.extraction.bucket=${AWS_EXTRACTION_BUCKET:}
aws.extraction.stateMachineArn=${AWS_EXTRACTION_SFN_ARN:}
aws.region=${AWS_REGION:us-east-1}
aws.extraction.prefix=${AWS_EXTRACTION_PREFIX:uploads}

# --- Internal API Auth (for Lambdas or other trusted services) ---
internal.api.token=${INTERNAL_API_TOKEN:change-me-dev-internal-token}

# Max file size
spring.servlet.multipart.max-file-size=10MB
# Max request size (total size for multipart/form-data)
spring.servlet.multipart.max-request-size=10MB

spring.config.import=classpath:application-email.properties
# Email properties consolidated in application-email.properties (see that file for all mail and notification settings).

# --- Timezone / Oracle offset-date fixes ---
# Force Hibernate to normalize JDBC timestamps to UTC to avoid ORA-18716 when mapping OffsetDateTime / Instant with Oracle driver
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
# Use plain TIMESTAMP rather than TIMESTAMP_UTC (Hibernate 6) to avoid driver getOffsetDateTime path that triggers ORA-18716 in some XE tzfile versions
spring.jpa.properties.hibernate.type.preferred_instant_jdbc_type=TIMESTAMP

