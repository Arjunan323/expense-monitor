-- V4: Create tax related and upcoming transactions tables (Oracle)

CREATE TABLE tax_categories (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    code VARCHAR2(64) NOT NULL UNIQUE,
    description VARCHAR2(255)
);

CREATE TABLE tax_transactions (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id NUMBER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    tax_year NUMBER(4),
    amount NUMBER(19,4) NOT NULL,
    paid_date DATE,
    category VARCHAR2(64),
    note VARCHAR2(1000)
);
CREATE INDEX idx_tax_transactions_user_year ON tax_transactions(user_id, tax_year);

CREATE TABLE upcoming_transactions (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id NUMBER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    due_date DATE NOT NULL,
    description VARCHAR2(500) NOT NULL,
    amount NUMBER(19,4) NOT NULL,
    category VARCHAR2(150),
    status VARCHAR2(20) DEFAULT 'PENDING' NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);
CREATE INDEX idx_upcoming_user_due ON upcoming_transactions(user_id, due_date);

-- Oracle trigger to manage updated_at timestamp
CREATE OR REPLACE TRIGGER trg_upcoming_set_updated
BEFORE UPDATE ON upcoming_transactions
FOR EACH ROW
BEGIN
  :NEW.updated_at := CURRENT_TIMESTAMP;
END;
/
